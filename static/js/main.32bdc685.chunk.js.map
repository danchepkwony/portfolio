{"version":3,"sources":["assets/resume.pdf","assets/images/github.svg","assets/images/devpost.svg","assets/images/codepen.svg","components/projectList/ProjectList.js","components/project/Project.js","components/about/About.js","components/spline/Spline.js","components/home/Home.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","ProjectList","props","className","onClick","setPage","Project","dangerouslySetInnerHTML","__html","projects","page","text","website","href","About","resume","download","Spline","useEffect","canvas","document","getElementById","Application","load","id","Home","useState","returnHome","setReturnHome","section","setSection","containerRef","useRef","onHomePage","blurTransition","blurElem","classList","remove","setTimeout","add","observer","IntersectionObserver","entries","isIntersecting","isMobile","root","rootMargin","threshold","reference","current","observe","unobserve","leftSection","rightSection","wrappedSetPage","useCallback","x","window","scrollTo","title","sub","description","backButton","ref","App","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","getAnalytics","logEvent","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.32bdc685.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.8887f24d.pdf\";","module.exports = __webpack_public_path__ + \"static/media/github.18ef7b71.svg\";","module.exports = __webpack_public_path__ + \"static/media/devpost.34d158e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/codepen.1eb445dd.svg\";","import React from 'react';\n\nconst ProjectList = (props) => (\n<section>\n    <ul className=\"projectGrid\">\n        <h3>Selected Works</h3>\n        <div className=\"selected\">\n            <li className=\"project\">\n                <h2 className='blue' onClick={() => props.setPage(\"muncie\")}>Muncie Afghan Refugee Website</h2>\n                <ul>\n                <li>React TypeScript</li>\n                <li>CSS</li>\n                </ul>\n            </li>\n            <li className=\"project\">\n                <h2 className='blue' onClick={() => props.setPage(\"puzzle\")}>Puzzle Wall</h2>\n                <ul>\n                    <li>Unity</li>\n                    <li>C#</li>\n                </ul>\n            </li>\n            <li className=\"project\">\n                <h2 className='blue' onClick={() => props.setPage(\"sportslink\")}>Sportslink Application Form</h2>\n                <ul>\n                    <li>React Javascript</li>\n                    <li>Azure Functions</li>\n                    <li>C#</li>\n                </ul>\n            </li>\n            <li className=\"project\">\n            <h2 className='blue' onClick={() => props.setPage(\"slack\")}>Slack Status Board</h2>\n            <ul>\n                <li>Azure Functions</li>\n                <li>C#</li>\n                <li>MySQL</li>\n            </ul>\n        </li>\n        </div>\n        <h3>Other Projects</h3>\n        <li className=\"project\">\n            <h2 className='blue' onClick={() => props.setPage(\"slack\")}>LSAMP Research</h2>\n            <ul>\n                <li>Azure Functions</li>\n                <li>C#</li>\n                <li>MySQL</li>\n            </ul>\n        </li>\n        <li className=\"project\">\n            <h2 className='blue' onClick={() => props.setPage(\"slack\")}>Something Else?</h2>\n            <ul>\n                <li>Azure Functions</li>\n                <li>C#</li>\n                <li>MySQL</li>\n            </ul>\n        </li>\n        <li className=\"project\">\n            <h2 className='blue' onClick={() => props.setPage(\"slack\")}>Techpoint SOS Challenge</h2>\n            <ul>\n                <li>Azure Functions</li>\n                <li>C#</li>\n                <li>MySQL</li>\n            </ul>\n        </li>\n    </ul> \n</section>\n)\n\nexport default ProjectList","import React from 'react';\nimport './Project.scss';\nimport projects from '../../assets/projects.json';\n\nconst Project = (props) => (\n    <section className=\"project\">\n            <div dangerouslySetInnerHTML={{__html: projects[props.page].text}}/>\n            {projects[props.page].website !== \"\" && <a className='blue' href={projects[props.page].website}>Website</a>}\n    </section>\n);\n \nexport default Project;","import React from 'react';\nimport './About.scss';\nimport resume from '../../assets/resume.pdf';\nimport github from '../../assets/images/github.svg';\nimport devpost from '../../assets/images/devpost.svg';\nimport codepen from '../../assets/images/codepen.svg';\n\nconst About = () => (\n    <section className=\"about\">\n            <p>\n                Hi, I'm Dan. I'm a junior at Ball State University majoring in Computer Science\n                and employee at the Digital Corps, an on-campus agency that makes websites and other digital products.\n            </p>\n            <p>\n                I learned to code by making bad Roblox games, and I love creating digital experiences.\n            </p>\n            <p>\n                <a href={resume} download=\"Resume_Chepkwony\">\n                    Download my resume\n                </a>\n                <a href=\"mailto: dan.k.chepkwony@gmail.com\">\n                    Email me\n                </a>\n            </p>\n    </section>\n);\n \nexport default About;\n\n/* <div>\n    <a href=\"https://github.com/danchepkwony\">\n        <img src={github} alt=\"Github\"></img>\n    </a>\n    <a href=\"https://devpost.com/danchepkwony\">\n        <img src={devpost} alt=\"Devpost\"></img>\n    </a>\n    <a href=\"https://codepen.io/danchepkwony\">\n        <img src={codepen} alt=\"CodePen\"></img>\n    </a>\n</div> */","import { Application } from '@splinetool/runtime';\nimport React, {useEffect} from 'react';\nimport './Spline.scss';\n\nconst Spline = () => {\n    useEffect(() => {\n        const canvas = document.getElementById('splineCanvas');\n        const app = new Application(canvas);\n        app.load('https://prod.spline.design/9Va6vISxouIOOeqt/scene.splinecode');\n    }, [])\n\n    return(\n        <div className=\"splineContainer\">\n            <canvas id=\"splineCanvas\" />\n        </div>\n    )\n}\nexport default Spline;","import React, {useState, useEffect, useCallback, useRef} from 'react';\nimport { isMobile } from 'react-device-detect';\nimport './Home.scss';\nimport ProjectList from '../projectList/ProjectList';\nimport Project from '../project/Project';\nimport About from '../about/About';\nimport Spline from '../spline/Spline';\n\nconst Home = () => {\n  const [page, setPage] = useState(\"home\");\n  const [returnHome, setReturnHome] = useState(false);\n  const [section, setSection] = useState(<>Here's <span id=\"blur\">some stuff I've done</span></>)\n  const containerRef = useRef(null)\n  const onHomePage = page === 'home' || page === 'about'\n\n  //\"Here's...\" blur effect\n  const blurTransition = () => {\n    var blurElem = document.getElementById('blur');\n    if(blurElem){\n      blurElem.classList.remove('blur');\n      setTimeout(function () {\n        blurElem.classList.add('blur');\n      }, 50)\n    }\n  }\n\n  //Intersection Observer for about section\n  useEffect(() => {\n    if(page === 'home'){\n      const options = {root: null, rootMargin: \"0px\", threshold:.75}\n      const callbackFunction = (entries) => {\n        const [ entry ] = entries\n        entry.isIntersecting && !isMobile ? setSection(<>Here's <span id=\"blur\">more about me</span></>) : setSection(<>Here's <span id=\"blur\">some stuff I've done</span></>)\n        blurTransition();\n      }\n\n      const observer = new IntersectionObserver(callbackFunction, options)\n      const reference = containerRef.current;\n      if (reference) observer.observe(reference)\n      blurTransition();\n\n      return () => {\n        if(reference) observer.unobserve(reference)\n      }\n    }\n  }, [containerRef, page])\n\n  //Initial animations\n  useEffect(() => {\n    var leftSection = document.getElementById('left')\n    var rightSection = document.getElementById('right')\n    if(leftSection && rightSection){\n      leftSection.classList.add('introAnimation')\n      rightSection.classList.add('introAnimation')\n    }\n  }, [])\n\n  //Page between animations\n  const wrappedSetPage = useCallback(x => {\n    if(!isMobile){\n      var leftSection = document.getElementById('left')\n      var rightSection = document.getElementById('right')\n      if(leftSection && rightSection){\n        leftSection.classList.remove('introAnimation')\n        rightSection.classList.remove('introAnimation')\n        leftSection.classList.remove('slideInDelayReverse')\n        rightSection.classList.remove('slideInReverse')\n        leftSection.classList.add('slideOut')\n        rightSection.classList.add('slideOutDelay')\n      }\n      setTimeout(function () {\n        if(leftSection && rightSection){\n          leftSection.classList.remove('slideOut')\n          rightSection.classList.remove('slideOutDelay')\n        }\n        setPage(x)\n      }, 750);\n    }\n    else{\n      setPage(x)\n      window.scrollTo(0, 0);\n    }\n  }, [setPage]);\n\n  const transitionBack = () =>{\n    if(!isMobile){\n      var backButton = document.getElementById('back')\n      var leftSection = document.getElementById('left')\n      var rightSection = document.getElementById('right')\n      if(leftSection && rightSection && backButton){\n        backButton.classList.add('slideOutDelayReverse')\n        leftSection && leftSection.classList.add('slideOutDelayReverse')\n        rightSection && rightSection.classList.add('slideOutReverse')\n      }\n      setTimeout(function () {\n        if(leftSection && rightSection && backButton){\n          backButton.classList.remove('slideOutDelayReverse')\n          leftSection.classList.remove('slideOutDelayReverse')\n          rightSection.classList.remove('slideOutReverse')\n        }\n        setReturnHome(true)\n        setPage('home')\n      }, 750);\n    }\n    else{\n      setPage('home');\n      window.scrollTo(0, 0);\n    }\n  }\n\n  //Left Text\n  var title = \"\", sub = \"\", description = \"\"\n  switch(page){\n    case 'muncie':\n      title = \"Muncie Afghan Refugee Resettlement\"\n      sub = \"React Typescript, CSS\"\n      description = \"Collecting online donations for a nonprofit\"\n      break;\n    case 'puzzle':\n      title = \"Puzzle Wall\"\n      sub = \"Unity, C#\"\n      description = \"A multiplayer TV Board puzzle game\"\n      break;\n    case 'sportslink':\n      title =\"Sportslink Application Form\"\n      sub = \"React Javascript, Azure Functions, C#\"\n      description = \"Sending application information to Google Sheets\"\n      break;\n    case 'slack':\n      title = \"Status Board Slack App\"\n      sub = \"Azure Functions, C#, MySQL\"\n      description = \"Collecting online donations for a nonprofit\"\n      break;\n    default:\n      title = \"Dan Chepkwony\";\n      sub = <><span>Hi</span>, I'm</>;\n  }\n    \n  return (\n    <main>\n    <div className=\"home\">\n      {page !== \"home\" && <button id=\"back\" className={!isMobile ? 'back blue slideIn' : 'back blue'} onClick={transitionBack}>{\"< Back\"}</button>}\n      <div id='left' className={\n        !onHomePage && !isMobile  ? 'left slideIn' :\n        returnHome === true && !isMobile ? 'left slideInDelayReverse' : 'left'\n      }>\n        <div className='text'>\n          <div className=\"sub\">{sub}</div>\n          <h1>{title}</h1>\n          <p>{page === \"home\" ? section : description}</p>\n        </div>\n        {!isMobile && onHomePage && <Spline />}\n      </div>\n      <div id='right' className={\n        page !== 'home' && page !== 'about' && !isMobile  ? 'right slideInDelay' :\n        returnHome === true && !isMobile ? 'right slideInReverse' : 'right'\n      }>\n        {page === \"home\" && \n        <>\n          <ProjectList setPage={wrappedSetPage}/>\n          <div ref={containerRef}>\n            <About />\n          </div>\n        </>}\n        {!onHomePage &&\n          <Project page={page} />\n        }\n      </div>\n    </div>\n    </main>\n  )\n}\n \nexport default Home;","import React from 'react';\nimport Home from './home/Home';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics, logEvent } from \"firebase/analytics\";\n\nconst App = () => {\n  const firebaseConfig = {\n    apiKey: \"AIzaSyCaP92eoq4bEjfQzxZ26azC8IWJ970HiWU\",\n    authDomain: \"portfolio2-47919.firebaseapp.com\",\n    databaseURL: \"https://portfolio2-47919.firebaseio.com\",\n    projectId: \"portfolio2-47919\",\n    storageBucket: \"portfolio2-47919.appspot.com\",\n    messagingSenderId: \"572088866809\",\n    appId: \"1:572088866809:web:cdb5d225cffe14baa90f28\",\n    measurementId: \"G-250B7QK8NR\"\n  };\n  \n  const app = initializeApp(firebaseConfig);\n  const analytics = getAnalytics(app);\n  logEvent(analytics, 'notification_received');\n\n  return ( \n      <Home />)\n};\n\n\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}